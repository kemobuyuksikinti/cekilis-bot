const { MessageEmbed, MessageActionRow, MessageSelectMenu } = require("discord.js")

module.exports = {
  name: 'help',
  description: 'ðŸ“œ Botun kullanabileceÄŸi tÃ¼m komutlarÄ± gÃ¶rÃ¼ntÃ¼leyin!',
  run: async (client, interaction) => {
    const embed = new MessageEmbed()
      .setTitle(`${client.user.username} KomutlarÄ±`)
      .setColor('#2F3136')
      .setDescription('**LÃ¼tfen tÃ¼m komutlarÄ±nÄ± gÃ¶rÃ¼ntÃ¼lemek iÃ§in bir kategori seÃ§in**')
      .addField(`Links:`, `- [Discord Sunucumuz](https://discord.gg/500)\n- [Beni sunucuna davet et](https://discord.com/api/oauth2/authorize?client_id=1007643115533901954&permissions=8&scope=applications.commands%20bot)\n- [Discord Sunucumuz](https://discord.gg/500)`, true)
      .setTimestamp()
      .setFooter({
        text: `${interaction.user.username} | TarafÄ±ndan talep edildi`,
        iconURL: interaction.user.displayAvatarURL()
      })

    const giveaway = new MessageEmbed()
      .setTitle("Kategoriler Â» Hediye")
      .setColor('#2F3136')
      .setDescription("```yaml\nÄ°ÅŸte Ã§ekiliÅŸ komutlarÄ±:```")
      .addFields(
        { name: 'Create / Start', value: `Sunucunuzda bir Ã§ekiliÅŸ baÅŸlatÄ±n!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'Edit', value: `HalihazÄ±rda devam eden bir Ã§ekiliÅŸi dÃ¼zenleyin!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'End', value: `HalihazÄ±rda devam eden bir Ã§ekiliÅŸi sonlandÄ±rÄ±n!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'List', value: `Bu sunucu iÃ§inde yÃ¼rÃ¼tÃ¼len tÃ¼m Ã§ekiliÅŸleri listeleyin!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'Pause', value: `HalihazÄ±rda devam eden bir Ã§ekiliÅŸi duraklatÄ±n!\n > **Komut TÃ¼rleri __\`slash\`__**`, inline: true },
        { name: 'Reroll', value: `Biten bir Ã§ekiliÅŸin kazananÄ±nÄ± yeniden seÃ§in!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'Resume', value: `DuraklatÄ±lmÄ±ÅŸ bir Ã§ekiliÅŸe devam edin!\n > **Komut TÃ¼rleri: __\`slash\`__**`, inline: true },
      )
      .setTimestamp()
      .setFooter({
        text: `${interaction.user.username} | TarafÄ±ndan talep edildi`,
        iconURL: interaction.user.displayAvatarURL()
      })

    const general = new MessageEmbed()
      .setTitle("Categories Â» General")
      .setColor('#2F3136')
      .setDescription("```yaml\nÄ°ÅŸte genel bot komutlarÄ±:```")
      .addFields(
        { name: 'Help', value: `Bu bot iÃ§in mevcut tÃ¼m komutlarÄ± gÃ¶sterir!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'Invite', value: `Botun davet baÄŸlantÄ±sÄ±nÄ± alÄ±n!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
        { name: 'Ping', value: `Botun sunucu gecikmesini kontrol edin!\n > **Komut TÃ¼rleri: __\`slash\` / \`message\`__**`, inline: true },
      )
      .setTimestamp()
      .setFooter({
        text: `${interaction.user.username} | TarafÄ±ndan talep edildi`,
        iconURL: interaction.user.displayAvatarURL()
      })

    const components = (state) => [
      new MessageActionRow().addComponents(
        new MessageSelectMenu()
          .setCustomId("help-menu")
          .setPlaceholder("LÃ¼tfen bir kategori seÃ§in")
          .setDisabled(state)
          .addOptions([{
            label: `Giveaways`,
            value: `giveaway`,
            description: `TÃ¼m Ã§ekiliÅŸ tabanlÄ± komutlarÄ± gÃ¶rÃ¼ntÃ¼leyin!`,
            emoji: `ðŸŽ‰`
          },
          {
            label: `General`,
            value: `general`,
            description: `TÃ¼m genel bot komutlarÄ±nÄ± gÃ¶rÃ¼ntÃ¼leyin!`,
            emoji: `âš™`
          }
          ])
      ),
    ];

    const initialMessage = await interaction.reply({ embeds: [embed], components: components(false) });

    const filter = (interaction) => interaction.user.id === interaction.member.id;

    const collector = interaction.channel.createMessageComponentCollector(
      {
        filter,
        componentType: "SELECT_MENU",
        idle: 300000,
        dispose: true,
      });

    collector.on('collect', (interaction) => {
      if (interaction.values[0] === "giveaway") {
        interaction.update({ embeds: [giveaway], components: components(false) }).catch((e) => { });
      } else if (interaction.values[0] === "general") {
        interaction.update({ embeds: [general], components: components(false) }).catch((e) => { });
      }
    });
    collector.on('end', (collected, reason) => {
      if (reason == "time") {
        initialMessage.edit({
          content: "Koleksiyoner Yok Edildi, Tekrar Deneyin!",
          components: [],
        });
      }
    })
  }
}
